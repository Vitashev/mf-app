name: Validate/Build/Deploy

# Controls when the action will run. Triggers the workflow on push or pull request.
# Link to default env variables that are provided by GitHub - https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables

on:
  push:
    branches: [develop]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Build all?'     
        required: true
        default: 'n'
      tags:
        description: 'Test scenario tags' 

env:
  APP_DIRECTORY: dist
  BUILD_ALL: ${{ github.event.inputs.logLevel }}
  NX_HEAD: ${{ github.event.after }}
  NX_BASE: ${{ github.event.before }}
  SHELL_APP_NAME: shell
  GCS_BUCKET: ${{ secrets.GCS_BUCKET_DEVELOP }}
  GCS_PROJECT: ${{ secrets.GCS_PROJECT_DEVELOP }}
  GCS_SA_KEY: ${{ secrets.GCS_SA_KEY_DEVELOP }}
  DEPLOY_PATH: apps
  REMOTE_PATH: http://34.107.186.167/apps

jobs:
  build_and_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        name: Checkout Base
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2

      - name: Use Node.js v12.14
        uses: actions/setup-node@v1
        with:
          node-version: 12.18.3

      - name: Install dependencies
        run: npm ci

      # - name: Lint
      #   run: npx nx affected --target=lint

      # - name: Test
      #   run: npx nx affected --target=test

      - name: Build
        run: |
          if ($Env:BUILD_ALL -match 'y') {
            $allParam = '--all'
          }
          Invoke-Expression -Command "npx nx affected --target=build ${allParam} --parallel --max-parallel=3"
        shell: pwsh

      - name: Setup GoogleCloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GCS_SA_KEY }}
          project_id: ${{ env.GCS_PROJECT }}
          export_default_credentials: true

      - name: Deploy
        run: ./powershell-scripts/deploy-app.ps1
        shell: pwsh

      - name: Setting up serving
        run: ./powershell-scripts/setup-serving.ps1
        shell: pwsh

      - name: Upload app artifacts
        uses: actions/upload-artifact@master
        with:
          name: app
          path: ${{ env.APP_DIRECTORY }}
