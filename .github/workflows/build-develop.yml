name: Validate/Build/Deploy

# Controls when the action will run. Triggers the workflow on push or pull request.
# Link to default env variables that are provided by GitHub - https://docs.github.com/en/actions/learn-github-actions/environment-variables#default-environment-variables

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop, master, 'feature/*']

env:
  APP_DIRECTORY: dist
  REMOTE_NAME: origin
  HEAD: ${{ github.event.pull_request.head.ref }}

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=5 $REMOTE_NAME $GITHUB_BASE_REF

      - name: Use Node.js v12.14
        uses: actions/setup-node@v1
        with:
          node-version: 12.18.3

      - name: Install dependencies
        run: npm ci

      # - name: Lint
      #   run: npm run affected-lint -- --base=$REMOTE_NAME/$GITHUB_BASE_REF --head=$GITHUB_HEAD_REF

      # - name: Test
      #   run: npm run affected-test -- --base=$REMOTE_NAME/$GITHUB_BASE_REF --head=$GITHUB_HEAD_REF

      - name: Build
        run: npm run affected-build -- --base=$REMOTE_NAME/$GITHUB_BASE_REF --head=$GITHUB_HEAD_REF

      - name: Upload app artifacts
        uses: actions/upload-artifact@master
        with:
          name: app
          path: ${{ env.APP_DIRECTORY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    # if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    env:
      APP_DIRECTORY: app-output
      GCS_BUCKET: ${{ secrets.GCS_BUCKET_DEVELOP }}
      GCS_PROJECT: ${{ secrets.GCS_PROJECT_DEVELOP }}
      GCS_SA_KEY: ${{ secrets.GCS_SA_KEY_DEVELOP }}

    steps:
      # - name: Start deployment
      #   uses: bobheadxi/deployments@v0.5.2
      #   id: deployment
      #   with:
      #     step: start
      #     token: ${{ secrets.GITHUB }}
      #     env: development

      - name: Download app artifacts
        uses: actions/download-artifact@master
        with:
          name: app
          path: ${{ env.APP_DIRECTORY }}

      # - name: Setup GoogleCloud
      #   uses: google-github-actions/setup-gcloud@master
      #   with:
      #     service_account_key: ${{ env.GCS_SA_KEY }}
      #     project_id: ${{ env.GCS_PROJECT }}
      #     export_default_credentials: true

      - name: Delete objects in bucket
        run: |-
          $dir = $Env:APP_DIRECTORY;
          $path = "${dir}/apps"

          $paths = '';

          $arr = Get-ChildItem $path |
            Where-Object {$_.PSIsContainer} |
            Foreach-Object {$_.Name}
            Write-Output $folder

          foreach ($folder in $arr){
            $paths += " gs://${GCS_BUCKET}/${appsFolderName}/${folder}/*"
          }

          $command = "gsutil -m rm -r ${paths}"
          Invoke-Expression $command
        shell: pwsh

      - name: Deploy
        run: |-
          gsutil -m rsync -R "$APP_DIRECTORY" gs://$GCS_BUCKET

      - name: Setting up serving
        run: |-
          gsutil web set -m shell/index.html gs://$GCS_BUCKET
          gsutil web set -e shell/index.html gs://$GCS_BUCKET

      - name: Update deployment status
        uses: bobheadxi/deployments@v0.5.2
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://platform-dev.anecdotes.ai